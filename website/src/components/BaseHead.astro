---
import { Font } from 'astro:assets';
import { ClientRouter } from 'astro:transitions';
import config from "@/config";

export interface Props {
  site_name?: string;
  title?: string;
  description?: string;
  image?: string;
  video?: string;
  type?: string;
  color?: string;
  disable_robots?: boolean;
  redirect?: string;
};

const props = Astro.props as Props;

const siteName = props.site_name || config.title;
const title = props.title || siteName;
const description = props.description || config.description;
const twitterCardType = props.image ? "summary_large_image" : "summary";
const twitterUsername = config.twitterUsername;
const image = props.image || config.image;
const type = props.type || "website";
const canonicalURL = Astro.url.toString();
const color = props.color || config.color;
const robots = props.disable_robots ? "noindex, nofollow" : "index, follow";
---

{/* Global Metadata */}
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="generator" content={Astro.generator} />
<meta name="robots" content={robots} />
<meta name="format-detection" content="telephone=no" />
<meta name="theme-color" content={color} />
{/* Font preloads */}
 <Font
  cssVariable="--font-bodoni-moda"
  preload={[
    { subset: 'latin', style: 'normal', weight: '400' },
    { subset: 'latin', style: 'italic', weight: '600' },
  ]}
/>
{/* Favicons/PWA manifest */}
{/*
<link rel="icon" type="image/png" sizes="32x32" href="/favicons/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="48x48" href="/favicons/favicon-48x48.png" />
<link rel="apple-touch-icon" sizes="128x128" href="/favicons/touch-128x128.png" />
<link rel="apple-touch-icon" sizes="192x192" href="/favicons/touch-192x192.png" />
<link rel="apple-touch-icon" sizes="256x256" href="/favicons/touch-256x256.png" />
*/}
{/* Canonical URL */}
<link rel="canonical" href={canonicalURL} />
{/* Primary Meta Tags */}
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
{/* Open Graph / Facebook */}
<meta property="og:type" content={type} />
<meta property="og:site_name" content={siteName} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={image} />
{props.video ? (
  <meta property="og:video" content={props.video} />
  <meta property="og:video:type" content="text/html" />
  <meta property="og:video:url" content={props.video} />
  <meta property="og:video:width" content="1280" />
  <meta property="og:video:height" content="720" />
) : null}
{/* Twitter */}
<meta property="twitter:card" content={twitterCardType} />
{twitterUsername ? (
  <meta property="twitter:site" content={twitterUsername} />
) : null}
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={image} />
{/* Redirect */}
{props.redirect ? (
  <meta http-equiv="refresh" content={`0;url=${props.redirect}`} />
) : null}

<style>
body {
  font-family: var(--font-bodoni-moda), serif;
}
</style>

<ClientRouter />